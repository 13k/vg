#!/bin/sh

vg() {
    case "$1" in
        init)
            __vg_init "${@:2}"
            ;;
        activate)
            __vg_activate "${@:2}"
            ;;
        deactivate)
            __vg_deactivate "${@:2}"
            ;;
        cdpackages)
            __vg_cdpackages "${@:2}"
            ;;
        globalExec)
            __vg_globalExec "${@:2}"
            ;;
        upgrade)
            __vg_upgrade "${@:2}"
            ;;
        *)
            command vg $@
    esac

}

__vg_init() {
    vg activate $@
    vg link
}

__vg_cdpackages() {
    if [ -z "$VIRTUALGO" ]; then
        echo Error: No virtualgo workspace is active at the moment
        vg help cdpackages
        return 1
    fi
    cd $VIRTUALGO_PATH/src/
}


__vg_activate() {
    if [ -n "$VIRTUALGO" ]; then
        vg deactivate
    fi

    export VIRTUALGO=$1
    if [ -z "$VIRTUALGO" ]; then
        export VIRTUALGO=$(basename $PWD)
    fi

    echo Activating $VIRTUALGO

    export VIRTUALGO_PATH=$HOME/.virtualgo/$VIRTUALGO

    export _VIRTUALGO_OLDPS1=$PS1
    export _VIRTUALGO_OLDGOPATH=$GOPATH
    export _VIRTUALGO_OLDGOBIN=$GOBIN
    export _VIRTUALGO_OLDPATH=$PATH

    export GOPATH=$VIRTUALGO_PATH:$GOPATH
    export GOBIN=$VIRTUALGO_PATH/bin
    export PATH="$GOBIN:$PATH"
    if [ -z "$VIRTUALGO_DISABLE_PROMPT" ]; then
        export PS1="($VIRTUALGO) $PS1"
    fi

    mkdir -p $VIRTUALGO_PATH/src/
    mkdir -p $GOBIN
}

__vg_deactivate() {
    if [ -z "$VIRTUALGO" ]; then
        echo Error: No go workspace is active at the moment
        vg help deactivate
        return 1
    fi

    echo Deactivating $VIRTUALGO

    export PS1=$_VIRTUALGO_OLDPS1
    export GOBIN=$_VIRTUALGO_OLDGOBIN
    export GOPATH=$_VIRTUALGO_OLDGOPATH
    export PATH=$_VIRTUALGO_OLDPATH

    unset VIRTUALGO _VIRTUALGO_OLDPS1 _VIRTUALGO_OLDPATH _VIRTUALGO_OLDGOBIN _VIRTUALGO_OLDGOPATH VIRTUALGO_PATH
}

__vg_auto_activate() {
    activation_root=$PWD
    while [ "$activation_root" != "" ]; do
        if [ -f "$activation_root/.virtualgo" ]; then
            new_virtualgo_name=$(cat "$activation_root/.virtualgo")
            if [ "" = "$VIRTUALGO" -o "$new_virtualgo_name" != "$VIRTUALGO" ]; then
                vg activate $new_virtualgo_name
            fi
            return
        fi
        # this strips the last path component from the path.
        activation_root=$(echo $activation_root | sed 's|/[^/]*$||')
    done
}

__vg_upgrade() {
    old_virtualgo=$VIRTUALGO
    if [ -n "$VIRTUALGO" ]; then
        __vg_deactivate
    fi

    echo Updating virtualgo
    go get -u github.com/GetStream/vg

    echo Reloading the shell part of virtualgo
    go get -u github.com/GetStream/vg
    __vg_reload

    if [ -n "$old_virtualgo" -a "$VIRTUALGO" != "$old_virtualgo" ]; then
        echo Reactivating $old_virtualgo
        vg activate $old_virtualgo
    fi
}

__vg_globalExec() {
    if [ -z "$1" ]; then
        echo Error: You should specify a command that should be executed
        vg help globalExec
        return 1
    fi

    old_virtualgo=$VIRTUALGO

    if [ -n "$VIRTUALGO" ]; then
        __vg_deactivate
    fi

    eval $@

    if [ -n "$old_virtualgo" -a "$VIRTUALGO" != "$old_virtualgo" ]; then
        vg activate $old_virtualgo
    fi
}



__vg_auto_activate
